# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from generated.servers.manga.v1 import manga_pb2 as generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2

GRPC_GENERATED_VERSION = '1.67.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in generated/servers/manga/v1/manga_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class MangaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SearchPlugin = channel.unary_unary(
                '/manga.v1.MangaService/SearchPlugin',
                request_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.SearchPluginRequest.SerializeToString,
                response_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.SearchPluginResponse.FromString,
                _registered_method=True)
        self.RefreshManga = channel.unary_unary(
                '/manga.v1.MangaService/RefreshManga',
                request_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RefreshMangaRequest.SerializeToString,
                response_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RefreshMangaResponse.FromString,
                _registered_method=True)
        self.InstallRepo = channel.unary_unary(
                '/manga.v1.MangaService/InstallRepo',
                request_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.InstallRepoRequest.SerializeToString,
                response_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.InstallRepoResponse.FromString,
                _registered_method=True)
        self.UnInstallRepo = channel.unary_unary(
                '/manga.v1.MangaService/UnInstallRepo',
                request_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RepoRequest.SerializeToString,
                response_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RepoResponse.FromString,
                _registered_method=True)
        self.UpdateRepo = channel.unary_unary(
                '/manga.v1.MangaService/UpdateRepo',
                request_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RepoRequest.SerializeToString,
                response_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RepoResponse.FromString,
                _registered_method=True)
        self.ListRepos = channel.unary_unary(
                '/manga.v1.MangaService/ListRepos',
                request_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ListRepoRequest.SerializeToString,
                response_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ListRepoResponse.FromString,
                _registered_method=True)
        self.InstallExtension = channel.unary_unary(
                '/manga.v1.MangaService/InstallExtension',
                request_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionRequest.SerializeToString,
                response_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionResponse.FromString,
                _registered_method=True)
        self.UnInstallExtension = channel.unary_unary(
                '/manga.v1.MangaService/UnInstallExtension',
                request_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionRequest.SerializeToString,
                response_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionResponse.FromString,
                _registered_method=True)
        self.UpdateExtension = channel.unary_unary(
                '/manga.v1.MangaService/UpdateExtension',
                request_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionRequest.SerializeToString,
                response_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionResponse.FromString,
                _registered_method=True)
        self.ListExtensions = channel.unary_unary(
                '/manga.v1.MangaService/ListExtensions',
                request_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ListExtensionRequest.SerializeToString,
                response_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ListExtensionResponse.FromString,
                _registered_method=True)


class MangaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SearchPlugin(self, request, context):
        """search plugin
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshManga(self, request, context):
        """refresh manga
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InstallRepo(self, request, context):
        """//////////////////////////////////////////////////////////////////////////////////////
        repo management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnInstallRepo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRepo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRepos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InstallExtension(self, request, context):
        """extension management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnInstallExtension(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateExtension(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExtensions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MangaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SearchPlugin': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchPlugin,
                    request_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.SearchPluginRequest.FromString,
                    response_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.SearchPluginResponse.SerializeToString,
            ),
            'RefreshManga': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshManga,
                    request_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RefreshMangaRequest.FromString,
                    response_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RefreshMangaResponse.SerializeToString,
            ),
            'InstallRepo': grpc.unary_unary_rpc_method_handler(
                    servicer.InstallRepo,
                    request_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.InstallRepoRequest.FromString,
                    response_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.InstallRepoResponse.SerializeToString,
            ),
            'UnInstallRepo': grpc.unary_unary_rpc_method_handler(
                    servicer.UnInstallRepo,
                    request_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RepoRequest.FromString,
                    response_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RepoResponse.SerializeToString,
            ),
            'UpdateRepo': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRepo,
                    request_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RepoRequest.FromString,
                    response_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RepoResponse.SerializeToString,
            ),
            'ListRepos': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRepos,
                    request_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ListRepoRequest.FromString,
                    response_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ListRepoResponse.SerializeToString,
            ),
            'InstallExtension': grpc.unary_unary_rpc_method_handler(
                    servicer.InstallExtension,
                    request_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionRequest.FromString,
                    response_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionResponse.SerializeToString,
            ),
            'UnInstallExtension': grpc.unary_unary_rpc_method_handler(
                    servicer.UnInstallExtension,
                    request_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionRequest.FromString,
                    response_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionResponse.SerializeToString,
            ),
            'UpdateExtension': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateExtension,
                    request_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionRequest.FromString,
                    response_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionResponse.SerializeToString,
            ),
            'ListExtensions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExtensions,
                    request_deserializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ListExtensionRequest.FromString,
                    response_serializer=generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ListExtensionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'manga.v1.MangaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('manga.v1.MangaService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MangaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SearchPlugin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/manga.v1.MangaService/SearchPlugin',
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.SearchPluginRequest.SerializeToString,
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.SearchPluginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RefreshManga(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/manga.v1.MangaService/RefreshManga',
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RefreshMangaRequest.SerializeToString,
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RefreshMangaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InstallRepo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/manga.v1.MangaService/InstallRepo',
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.InstallRepoRequest.SerializeToString,
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.InstallRepoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnInstallRepo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/manga.v1.MangaService/UnInstallRepo',
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RepoRequest.SerializeToString,
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RepoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateRepo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/manga.v1.MangaService/UpdateRepo',
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RepoRequest.SerializeToString,
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.RepoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListRepos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/manga.v1.MangaService/ListRepos',
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ListRepoRequest.SerializeToString,
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ListRepoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InstallExtension(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/manga.v1.MangaService/InstallExtension',
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionRequest.SerializeToString,
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnInstallExtension(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/manga.v1.MangaService/UnInstallExtension',
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionRequest.SerializeToString,
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateExtension(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/manga.v1.MangaService/UpdateExtension',
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionRequest.SerializeToString,
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ExtensionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListExtensions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/manga.v1.MangaService/ListExtensions',
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ListExtensionRequest.SerializeToString,
            generated_dot_servers_dot_manga_dot_v1_dot_manga__pb2.ListExtensionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
